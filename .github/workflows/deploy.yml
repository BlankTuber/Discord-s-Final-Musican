name: Deploy Discord Music Bot

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need at least 2 commits to detect changes
    
    - name: Create shared directory
      run: |
        mkdir -p shared
        echo "Shared directory ready"
    
    - name: Check for janitor changes
      id: janitor-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "^janitor/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Janitor code has changed"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No janitor changes detected"
        fi
    
    - name: Build janitor
      if: steps.janitor-changes.outputs.changed == 'true' || !hashFiles('janitor/janitor')
      run: |
        echo "Building janitor with SQLite3 support..."
        cd janitor
        gcc -Wall -o janitor janitor.c -lsqlite3
        chmod +x janitor
        echo "Janitor built successfully with SQLite3 linking"
    
    - name: Check for database initializer changes
      id: db-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "^db/"; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Database initializer code has changed"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No database initializer changes detected"
        fi
    
    - name: Build database initializer
      if: steps.db-changes.outputs.changed == 'true' || !hashFiles('db/db_init')
      run: |
        echo "Building database initializer..."
        cd db
        go build -o db_init db_initializer.go
        chmod +x db_init
        echo "Database initializer built successfully"
    
    - name: Check if database exists
      id: db-exists
      run: |
        if [ -f "shared/musicbot.db" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Database already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Database does not exist"
        fi
    
    - name: Initialize database
      if: steps.db-exists.outputs.exists == 'false'
      run: |
        echo "Initializing database..."
        cd db
        ./db_init -path ../shared
        echo "Database initialized successfully"
    
    - name: Check for Go mod changes (bot)
      id: bot-mod-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "^bot/go.mod\|^bot/go.sum"; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Bot Go modules have changed"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No bot Go module changes detected"
        fi
    
    - name: Update Go dependencies (bot)
      if: steps.bot-mod-changes.outputs.changed == 'true'
      run: |
        echo "Updating bot Go dependencies..."
        cd bot
        go mod download
        go mod tidy
        echo "Bot Go dependencies updated"
    
    - name: Check for Go mod changes (db)
      id: db-mod-changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "^db/go.mod\|^db/go.sum"; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "DB Go modules have changed"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No DB Go module changes detected"
        fi
    
    - name: Update Go dependencies (db)
      if: steps.db-mod-changes.outputs.changed == 'true'
      run: |
        echo "Updating database Go dependencies..."
        cd db
        go mod download
        go mod tidy
        echo "Database Go dependencies updated"
    
    - name: Run janitor cleanup
      run: |
        echo "Running janitor cleanup..."
        cd janitor
        ./janitor ../shared/musicbot.db ../shared
        echo "Janitor cleanup completed"
    
    - name: Set permissions
      run: |
        echo "Setting proper permissions..."
        chmod -R 755 .
        chmod 666 shared/musicbot.db 2>/dev/null || true
        echo "Permissions set"
    
    - name: Deployment summary
      run: |
        echo "=== Deployment Summary ==="
        echo "Janitor rebuilt: ${{ steps.janitor-changes.outputs.changed }}"
        echo "Database initializer rebuilt: ${{ steps.db-changes.outputs.changed }}"
        echo "Database initialized: ${{ steps.db-exists.outputs.exists == 'false' }}"
        echo "Python deps updated: ${{ steps.py-requirements-changes.outputs.changed }}"
        echo "Bot Go deps updated: ${{ steps.bot-mod-changes.outputs.changed }}"
        echo "DB Go deps updated: ${{ steps.db-mod-changes.outputs.changed }}"
        echo ""
        echo "Services will restart automatically at 2:30 AM daily"
        echo "No manual restart required"
        echo "==========================="
